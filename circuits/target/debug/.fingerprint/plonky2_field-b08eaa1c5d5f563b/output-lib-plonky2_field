thread 'rustc' panicked at 'assertion failed: !self.intercrate', compiler/rustc_trait_selection/src/traits/query/evaluate_obligation.rs:100:13
stack backtrace:
   0: _rust_begin_unwind
   1: core::panicking::panic_fmt
   2: core::panicking::panic
   3: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation
   4: <rustc_infer::infer::InferCtxt as rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt>::evaluate_obligation_no_overflow
   5: <rustc_trait_selection::traits::fulfill::FulfillProcessor>::process_trait_obligation
   6: <rustc_trait_selection::traits::fulfill::FulfillProcessor as rustc_data_structures::obligation_forest::ObligationProcessor>::process_obligation
   7: <rustc_data_structures::obligation_forest::ObligationForest<rustc_trait_selection::traits::fulfill::PendingPredicateObligation>>::process_obligations::<rustc_trait_selection::traits::fulfill::FulfillProcessor>
   8: <rustc_trait_selection::traits::fulfill::FulfillmentContext as rustc_infer::traits::engine::TraitEngine>::select_where_possible
   9: <rustc_trait_selection::traits::engine::ObligationCtxt>::select_all_or_error
  10: rustc_trait_selection::traits::specialize::translate_args
  11: rustc_trait_selection::traits::project::opt_normalize_projection_type
  12: rustc_trait_selection::traits::project::project_and_unify_type
  13: <rustc_infer::infer::InferCtxt>::commit_if_ok::<rustc_trait_selection::traits::project::ProjectAndUnifyResult, rustc_infer::traits::project::MismatchedProjectionTypes, rustc_trait_selection::traits::project::poly_project_and_unify_type::{closure#0}>
  14: rustc_trait_selection::traits::project::poly_project_and_unify_type
  15: <rustc_trait_selection::traits::select::SelectionContext>::evaluate_predicate_recursively
  16: <rustc_infer::infer::InferCtxt>::probe::<core::result::Result<rustc_middle::traits::select::EvaluationResult, rustc_middle::traits::select::OverflowError>, <rustc_trait_selection::traits::select::SelectionContext>::evaluation_probe<<rustc_trait_selection::traits::select::SelectionContext>::evaluate_root_obligation::{closure#0}>::{closure#0}>
  17: <core::iter::adapters::map::Map<core::iter::adapters::flatten::Flatten<core::array::iter::IntoIter<&alloc::vec::Vec<rustc_middle::ty::Predicate>, 2>>, rustc_trait_selection::traits::coherence::impl_intersection_has_impossible_obligation::{closure#1}> as core::iter::traits::iterator::Iterator>::try_fold::<(), core::iter::traits::iterator::Iterator::find::check<rustc_infer::traits::Obligation<rustc_middle::ty::Predicate>, &mut rustc_trait_selection::traits::coherence::impl_intersection_has_impossible_obligation::{closure#0}>::{closure#0}, core::ops::control_flow::ControlFlow<rustc_infer::traits::Obligation<rustc_middle::ty::Predicate>>>
  18: rustc_trait_selection::traits::coherence::overlap
  19: rustc_trait_selection::traits::coherence::overlapping_impls
  20: <rustc_middle::traits::specialization_graph::Children as rustc_trait_selection::traits::specialize::specialization_graph::ChildrenExt>::insert
  21: <rustc_middle::traits::specialization_graph::Graph as rustc_trait_selection::traits::specialize::specialization_graph::GraphExt>::insert
  22: rustc_trait_selection::traits::specialize::specialization_graph_provider
  23: rustc_hir_analysis::coherence::coherent_trait
  24: <rustc_session::session::Session>::track_errors::<rustc_hir_analysis::check_crate::{closure#3}, ()>
  25: rustc_hir_analysis::check_crate
  26: rustc_interface::passes::analysis
  27: <rustc_middle::ty::context::GlobalCtxt>::enter::<rustc_driver_impl::run_compiler::{closure#1}::{closure#2}::{closure#4}, core::result::Result<(), rustc_span::ErrorGuaranteed>>
  28: rustc_span::set_source_map::<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}::{closure#0}>
  29: <scoped_tls::ScopedKey<rustc_span::SessionGlobals>>::set::<rustc_interface::interface::run_compiler<core::result::Result<(), rustc_span::ErrorGuaranteed>, rustc_driver_impl::run_compiler::{closure#1}>::{closure#0}, core::result::Result<(), rustc_span::ErrorGuaranteed>>
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.

error: the compiler unexpectedly panicked. this is a bug.

note: we would appreciate a bug report: https://github.com/rust-lang/rust/issues/new?labels=C-bug%2C+I-ICE%2C+T-compiler&template=ice.md

note: rustc 1.73.0-nightly (4c8bb79d9 2023-07-15) running on aarch64-apple-darwin

note: compiler flags: --crate-type lib -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked

note: some of the compiler flags provided by cargo are hidden

query stack during panic:
#0 [specialization_graph_of] building specialization graph of trait `ops::Square`
#1 [coherent_trait] coherence checking all impls of trait `ops::Square`
#2 [analysis] running analysis passes on this crate
end of query stack
